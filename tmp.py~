#!/usr/bin/env python3

import sys
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QLineEdit, QPushButton, QLabel


class MyApplication(QWidget):
    def __init__(self):
        super().__init__()

        self.init_ui()

    def init_ui(self):
        # Create three QLineEdit boxes, two buttons, and a label
        self.line_edit1 = QLineEdit(self)
        self.line_edit2 = QLineEdit(self)
        self.line_edit3 = QLineEdit(self)
        self.enter_data_button = QPushButton('Enter Data', self)
        self.report_data_button = QPushButton('Report Data', self)
        self.report_label = QLabel(self)

        # Connect the button click events to the corresponding functions
        self.enter_data_button.clicked.connect(self.enter_data)
        self.report_data_button.clicked.connect(self.report_data)

        # Create a vertical layout for the widgets
        layout = QVBoxLayout(self)
        layout.addWidget(self.line_edit1)
        layout.addWidget(self.line_edit2)
        layout.addWidget(self.line_edit3)
        layout.addWidget(self.enter_data_button)
        layout.addWidget(self.report_data_button)
        layout.addWidget(self.report_label)

        self.setLayout(layout)

    def enter_data(self):
        # Check which QLineEdit has focus and set its text to "Entered Data"
        if self.line_edit1.hasFocus():
            self.line_edit1.setText('0')
        elif self.line_edit2.hasFocus():
            self.line_edit2.setText('0')
        elif self.line_edit3.hasFocus():
            self.line_edit3.setText('0')

    def report_data(self):
        # Check which QLineEdit has focus and report its text
        if self.line_edit1.hasFocus():
            text = self.line_edit1.text()
            self.report_label.setText(f"Reported Data: {text}")
        elif self.line_edit2.hasFocus():
            text = self.line_edit2.text()
            self.report_label.setText(f"Reported Data: {text}")
        elif self.line_edit3.hasFocus():
            text = self.line_edit3.text()
            self.report_label.setText(f"Reported Data: {text}")


if __name__ == '__main__':
    app = QApplication(sys.argv)

    # Create and show the main window
    window = MyApplication()
    window.show()

    sys.exit(app.exec_())
